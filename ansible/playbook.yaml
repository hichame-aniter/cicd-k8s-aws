---
- name: Initialization
  hosts: k8s_cluster01
  become: yes
  tasks:
    - name: Updates all paquets
      dnf:
        name: "*"
        state: latest
        update_cache: yes
    - name: Update the /etc/hosts file with node name
      lineinfile:
        dest: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item].tags.Name.split('-')[-1]}}\t{{ hostvars[item].tags.Name.split('-')[-1]}}"
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}\t{{ hostvars[item].tags.Name.split('-')[-1]}}\t{{ hostvars[item].tags.Name.split('-')[-1]}}"
        state: present
        backup: yes
      with_items: "{{groups['k8s_cluster01']}}"

- name: Configuration
  hosts: _Master, _Worker
  become: yes
  tasks:
    - name: Install required packages
      dnf:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
    - name: Add Docker repo
      shell: yum-config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo 
    - name: Install Containerd
      dnf:
        name: containerd.io
        state: latest
    - name: Start Containerd service
      service:
        name: containerd
        state: started
        enabled: yes
    - name: Create PKI directory
      file:
        path: /var/lib/kubernetes/pki/
        state: directory
    - name: Copy Certificates to Master nodes
      copy:
        src: "{{ item }}"
        dest: "/var/lib/kubernetes/pki/"
      loop:
        - ../kubernetes/certificates/ca.crt                         
        - ../kubernetes/certificates/ca.key
        - ../kubernetes/certificates/etcd-ca.crt                   
        - ../kubernetes/certificates/etcd-ca.key                   
        - ../kubernetes/certificates/kube-apiserver.crt
        - ../kubernetes/certificates/kube-apiserver.key
        - ../kubernetes/certificates/apiserver-kubelet-client.crt  
        - ../kubernetes/certificates/apiserver-kubelet-client.key  
        - ../kubernetes/certificates/kube-controller-manager.crt
        - ../kubernetes/certificates/kube-controller-manager.key
        - ../kubernetes/certificates/kube-scheduler.crt
        - ../kubernetes/certificates/kube-scheduler.key
        - ../kubernetes/certificates/etcd-server.crt
        - ../kubernetes/certificates/etcd-server.key                  
        - ../kubernetes/certificates/kube-proxy.crt
        - ../kubernetes/certificates/kube-proxy.key
        - ../kubernetes/certificates/service-account.crt
        - ../kubernetes/certificates/service-account.key
      when: ansible_host in groups["_Master"]
    - name: Copy Certificates to Worker nodes
      copy:
        src: "{{ item }}"
        dest: "/var/lib/kubernetes/pki/"
      loop:
        - ../kubernetes/certificates/ca.crt
        - ../kubernetes/certificates/etcd-ca.crt
        - ../kubernetes/certificates/kube-proxy.crt
        - ../kubernetes/certificates/kube-proxy.key
      when: ansible_host in groups["_Worker"]



#  rescue:
#    - name: Remove repository (and clean up left-over metadata)
#      ansible.builtin.yum_repository:
#        name: docker-ce
#        state: absent
#      notify: yum-clean-metadata
